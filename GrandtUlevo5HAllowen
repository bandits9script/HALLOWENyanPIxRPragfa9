---–ï–°–õ–ò –¢–´ –°–ü–†–ò–†–ê–¢–ò–õ –¢–û –¢–´ –°–´–ù –•–£–ô–ù–ò

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer
local mouse = player:GetMouse()

local settings = {
    HitboxEnabled = false,
    HitboxSize = 5,
    AutoFire = false,
    KillAllEnabled = false,
    SpeedEnabled = false,
    SpinEnabled = false,
    AntiKill = false,
    ChamsEnabled = false
}

local bodyParts = {"Head"}
local originalSizes = {} 

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "BANDITS9SCRIPT_GUI"
ScreenGui.Parent = CoreGui
ScreenGui.ResetOnSpawn = false
ScreenGui.DisplayOrder = 9999
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local halloweenEmojis = {"üéÉ", "üëª", "üï∑Ô∏è"}
local decorations = {}
local decorationConnections = {}

local function createHalloweenDecorations()
    for i = 1, 15 do
        local emoji = Instance.new("TextLabel")
        emoji.Name = "HalloweenEmoji_" .. i
        emoji.Size = UDim2.new(0, 30, 0, 30)
        emoji.Position = UDim2.new(
            math.random() * 0.9,
            math.random(-50, 50),
            math.random() * 0.9, 
            math.random(-50, 50)
        )
        emoji.BackgroundTransparency = 1
        emoji.Text = halloweenEmojis[math.random(1, 3)]
        emoji.TextColor3 = Color3.fromRGB(255, 165, 0)
        emoji.TextSize = math.random(20, 30)
        emoji.Font = Enum.Font.SourceSansBold
        emoji.ZIndex = 9997
        emoji.Parent = ScreenGui
        
        local startY = 1.1
        local endY = -0.1
        local speed = math.random(20, 40) / 100
        
        local function animateEmoji()
            local currentTime = 0
            local connection = RunService.RenderStepped:Connect(function(delta)
                if not emoji or not emoji.Parent then
                    connection:Disconnect()
                    return
                end
                
                currentTime = currentTime + delta * speed
                local progress = (math.sin(currentTime) + 1) / 2
                local yPos = startY + (endY - startY) * progress
                
                emoji.Position = UDim2.new(
                    emoji.Position.X.Scale,
                    emoji.Position.X.Offset + math.sin(currentTime * 0.5) * 2,
                    yPos,
                    emoji.Position.Y.Offset
                )
            end)
            
            decorationConnections[i] = connection
        end
        
        animateEmoji()
        table.insert(decorations, emoji)
    end
end

createHalloweenDecorations()

local function hideHalloweenDecorations()
    for _, connection in pairs(decorationConnections) do
        if connection then
            connection:Disconnect()
        end
    end
    
    for _, emoji in pairs(decorations) do
        if emoji and emoji.Parent then
            emoji.Visible = false
        end
    end
end

local function showHalloweenDecorations()
    for _, emoji in pairs(decorations) do
        if emoji and emoji.Parent then
            emoji.Visible = true
        end
    end
    
    for i, emoji in pairs(decorations) do
        if emoji and emoji.Parent then
            local startY = 1.1
            local endY = -0.1
            local speed = math.random(20, 40) / 100
            
            local function animateEmoji()
                local currentTime = 0
                local connection = RunService.RenderStepped:Connect(function(delta)
                    if not emoji or not emoji.Parent then
                        connection:Disconnect()
                        return
                    end
                    
                    currentTime = currentTime + delta * speed
                    local progress = (math.sin(currentTime) + 1) / 2
                    local yPos = startY + (endY - startY) * progress
                    
                    emoji.Position = UDim2.new(
                        emoji.Position.X.Scale,
                        emoji.Position.X.Offset + math.sin(currentTime * 0.5) * 2,
                        yPos,
                        emoji.Position.Y.Offset
                    )
                end)
                
                decorationConnections[i] = connection
            end
            
            animateEmoji()
        end
    end
end

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 360, 0, 250)
MainFrame.Position = UDim2.new(0.5, -180, 0.5, -125)
MainFrame.BackgroundColor3 = Color3.fromRGB(40, 20, 0)
MainFrame.BackgroundTransparency = 0.1
MainFrame.BorderSizePixel = 0
MainFrame.ZIndex = 9999
MainFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = MainFrame

local UIStroke = Instance.new("UIStroke")
UIStroke.Color = Color3.fromRGB(255, 140, 0)
UIStroke.Thickness = 3
UIStroke.Parent = MainFrame

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 28)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundColor3 = Color3.fromRGB(60, 30, 0)
Title.BackgroundTransparency = 0.2
Title.Text = "BANDITS9SCRIPT‚Ñ¢"
Title.TextColor3 = Color3.fromRGB(255, 165, 0)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 16
Title.BorderSizePixel = 0
Title.ZIndex = 10000
Title.Parent = MainFrame

local TitleTextStroke = Instance.new("UIStroke")
TitleTextStroke.Color = Color3.fromRGB(0, 0, 0)
TitleTextStroke.Thickness = 2
TitleTextStroke.Parent = Title

local TitleGlow = Instance.new("UIStroke")
TitleGlow.Color = Color3.fromRGB(255, 69, 0)
TitleGlow.Thickness = 3
TitleGlow.Transparency = 0.5
TitleGlow.Parent = Title

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 8)
TitleCorner.Parent = Title

local TitleStroke = Instance.new("UIStroke")
TitleStroke.Color = Color3.fromRGB(255, 140, 0)
TitleStroke.Thickness = 2
TitleStroke.Parent = Title

local TabsFrame = Instance.new("Frame")
TabsFrame.Size = UDim2.new(0, 100, 1, -34)
TabsFrame.Position = UDim2.new(0, 8, 0, 34)
TabsFrame.BackgroundTransparency = 1
TabsFrame.ZIndex = 10000
TabsFrame.Parent = MainFrame

local tabNames = {"Main", "Legit", "ESP/CHAMS", "Credits"}
local tabButtons = {}
for i, name in ipairs(tabNames) do
    local btn = Instance.new("TextButton")
    btn.Name = name .. "Tab"
    btn.Size = UDim2.new(1, 0, 0, 30)
    btn.Position = UDim2.new(0, 0, 0, (i-1)*35)
    btn.BackgroundColor3 = Color3.fromRGB(80, 40, 0)
    btn.Text = name
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 12
    btn.TextColor3 = Color3.fromRGB(255, 140, 0)
    btn.BorderSizePixel = 0
    btn.ZIndex = 10001
    btn.Parent = TabsFrame
    
    local btnTextStroke = Instance.new("UIStroke")
    btnTextStroke.Color = Color3.fromRGB(0, 0, 0)
    btnTextStroke.Thickness = 2
    btnTextStroke.Parent = btn
    
    local c = Instance.new("UICorner")
    c.CornerRadius = UDim.new(0,6)
    c.Parent = btn
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(255, 140, 0)
    stroke.Thickness = 2
    stroke.Parent = btn
    tabButtons[name] = btn
end

local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, -116, 1, -34)
ContentFrame.Position = UDim2.new(0, 108, 0, 34)
ContentFrame.BackgroundTransparency = 1
ContentFrame.ZIndex = 10000
ContentFrame.Parent = MainFrame

local pages = {}
for _, name in ipairs(tabNames) do
    local page = Instance.new("Frame")
    page.Name = name .. "Page"
    page.Size = UDim2.new(1, 0, 1, 0)
    page.Position = UDim2.new(0, 0, 0, 0)
    page.BackgroundTransparency = 1
    page.Visible = false
    page.ZIndex = 10000
    page.Parent = ContentFrame
    pages[name] = page
end
pages["Main"].Visible = true

local buttonInstances = {}

local function addButtonToPage(page, name, x, y, w, h, textSize)
    local btn = Instance.new("TextButton")
    btn.Name = name:gsub(" ", "_")
    btn.Size = UDim2.new(0, w or 140, 0, h or 30)
    btn.Position = UDim2.new(0, x or 0, 0, y or 0)
    btn.BackgroundColor3 = Color3.fromRGB(120, 60, 0)
    btn.Text = name
    btn.TextColor3 = Color3.fromRGB(255, 140, 0)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = textSize or 14
    btn.BorderSizePixel = 0
    btn.ZIndex = 10001
    btn.Parent = page
    
    local btnTextStroke = Instance.new("UIStroke")
    btnTextStroke.Color = Color3.fromRGB(0, 0, 0)
    btnTextStroke.Thickness = 2
    btnTextStroke.Parent = btn
    
    local uc = Instance.new("UICorner")
    uc.CornerRadius = UDim.new(0,8)
    uc.Parent = btn
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(255, 140, 0)
    stroke.Thickness = 2
    stroke.Parent = btn
    buttonInstances[name] = btn
    return btn
end

addButtonToPage(pages["Main"], "HITBOX: OFF", 10, 8, 160, 32, 14)
addButtonToPage(pages["Main"], "AUTO FIRE: OFF", 10, 52, 160, 32, 14)
addButtonToPage(pages["Main"], "KILL ALL: OFF", 10, 96, 160, 32, 14)

addButtonToPage(pages["Legit"], "SPEED: OFF", 10, 8, 160, 32, 14)
addButtonToPage(pages["Legit"], "SPIN: OFF", 10, 52, 160, 32, 14)
addButtonToPage(pages["Legit"], "ANTI KILL: OFF", 10, 96, 160, 32, 14)

addButtonToPage(pages["ESP/CHAMS"], "CHAMS: OFF", 10, 8, 160, 32, 14)

local creditsLabel = Instance.new("TextLabel")
creditsLabel.Size = UDim2.new(1, -12, 1, -12)
creditsLabel.Position = UDim2.new(0, 6, 0, 6)
creditsLabel.BackgroundTransparency = 1
creditsLabel.Text = "BANDITS9SCRIPT‚Ñ¢\n\nBETA 00.2\n\n–ü–û–î–ü–ò–®–ò–°–¨ –ù–ê –¢–ï–õ–ï–ì–†–ê–ú –ü–õ–ò–°"
creditsLabel.TextColor3 = Color3.fromRGB(255, 140, 0)
creditsLabel.Font = Enum.Font.SourceSansBold
creditsLabel.TextSize = 16
creditsLabel.TextWrapped = true
creditsLabel.TextYAlignment = Enum.TextYAlignment.Top
creditsLabel.ZIndex = 10000
creditsLabel.Parent = pages["Credits"]

local creditsTextStroke = Instance.new("UIStroke")
creditsTextStroke.Color = Color3.fromRGB(0, 0, 0)
creditsTextStroke.Thickness = 2
creditsTextStroke.Parent = creditsLabel

local creditsStroke = Instance.new("UIStroke")
creditsStroke.Color = Color3.fromRGB(255, 140, 0)
creditsStroke.Thickness = 2
creditsStroke.Parent = creditsLabel

local hitboxGUI
local isHitboxGUIVisible = false

local function createHitboxGUI()
    if hitboxGUI then
        hitboxGUI:Destroy()
    end
    
    hitboxGUI = Instance.new("ScreenGui")
    hitboxGUI.Name = "HitboxSettingsGUI"
    hitboxGUI.Parent = CoreGui
    hitboxGUI.ResetOnSpawn = false

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 280, 0, 160)
    frame.Position = UDim2.new(0.5, -140, 0.5, -80)
    frame.BackgroundColor3 = Color3.fromRGB(40, 20, 0)
    frame.Active = true
    frame.Draggable = true
    frame.Parent = hitboxGUI

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = frame

    local UIStroke = Instance.new("UIStroke")
    UIStroke.Color = Color3.fromRGB(255, 140, 0)
    UIStroke.Thickness = 3
    UIStroke.Parent = frame

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0, 30)
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.BackgroundColor3 = Color3.fromRGB(60, 30, 0)
    titleLabel.Text = "üéÉ –†–ê–ó–ú–ï–† –•–ò–¢–ë–û–ö–°–ê üéÉ"
    titleLabel.TextColor3 = Color3.fromRGB(255, 165, 0)
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.TextSize = 14
    titleLabel.Parent = frame

    local titleTextStroke = Instance.new("UIStroke")
    titleTextStroke.Color = Color3.fromRGB(0, 0, 0)
    titleTextStroke.Thickness = 2
    titleTextStroke.Parent = titleLabel

    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 10)
    titleCorner.Parent = titleLabel

    local sizeDisplay = Instance.new("TextLabel")
    sizeDisplay.Size = UDim2.new(1, -20, 0, 20)
    sizeDisplay.Position = UDim2.new(0, 10, 0, 35)
    sizeDisplay.BackgroundTransparency = 1
    sizeDisplay.Text = "–†–∞–∑–º–µ—Ä: " .. settings.HitboxSize
    sizeDisplay.TextColor3 = Color3.fromRGB(255, 140, 0)
    sizeDisplay.Font = Enum.Font.SourceSansBold
    sizeDisplay.TextSize = 12
    sizeDisplay.Parent = frame

    local sizeTextStroke = Instance.new("UIStroke")
    sizeTextStroke.Color = Color3.fromRGB(0, 0, 0)
    sizeTextStroke.Thickness = 2
    sizeTextStroke.Parent = sizeDisplay

    local mainSliderFrame = Instance.new("Frame")
    mainSliderFrame.Size = UDim2.new(0.9, 0, 0, 50)
    mainSliderFrame.Position = UDim2.new(0.05, 0, 0, 60)
    mainSliderFrame.BackgroundColor3 = Color3.fromRGB(80, 40, 0)
    mainSliderFrame.Parent = frame

    local mainSliderCorner = Instance.new("UICorner")
    mainSliderCorner.CornerRadius = UDim.new(0, 8)
    mainSliderCorner.Parent = mainSliderFrame

    local mainSliderStroke = Instance.new("UIStroke")
    mainSliderStroke.Color = Color3.fromRGB(255, 140, 0)
    mainSliderStroke.Thickness = 2
    mainSliderStroke.Parent = mainSliderFrame

    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Size = UDim2.new(1, 0, 0, 15)
    sliderLabel.Position = UDim2.new(0, 0, 0, 2)
    sliderLabel.BackgroundTransparency = 1
    sliderLabel.Text = "–†–ê–ó–ú–ï–† –•–ò–¢–ë–û–ö–°–ê:"
    sliderLabel.TextColor3 = Color3.fromRGB(255, 165, 0)
    sliderLabel.Font = Enum.Font.SourceSansBold
    sliderLabel.TextSize = 11
    sliderLabel.Parent = mainSliderFrame

    local sliderTextStroke = Instance.new("UIStroke")
    sliderTextStroke.Color = Color3.fromRGB(0, 0, 0)
    sliderTextStroke.Thickness = 1
    sliderTextStroke.Parent = sliderLabel

    local sliderBackground = Instance.new("Frame")
    sliderBackground.Size = UDim2.new(0.8, 0, 0, 12)
    sliderBackground.Position = UDim2.new(0.1, 0, 0, 20)
    sliderBackground.BackgroundColor3 = Color3.fromRGB(100, 50, 0)
    sliderBackground.Parent = mainSliderFrame

    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(1, 0)
    sliderCorner.Parent = sliderBackground

    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new((settings.HitboxSize - 1) / 19, 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(255, 140, 0)
    sliderFill.Parent = sliderBackground

    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(1, 0)
    fillCorner.Parent = sliderFill

    local sliderButton = Instance.new("TextButton")
    sliderButton.Size = UDim2.new(0, 20, 0, 20)
    sliderButton.Position = UDim2.new((settings.HitboxSize - 1) / 19, -10, 0.5, -10)
    sliderButton.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
    sliderButton.Text = "üëª"
    sliderButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    sliderButton.Font = Enum.Font.SourceSansBold
    sliderButton.TextSize = 10
    sliderButton.AutoButtonColor = false
    sliderButton.Parent = sliderBackground

    local buttonTextStroke = Instance.new("UIStroke")
    buttonTextStroke.Color = Color3.fromRGB(0, 0, 0)
    buttonTextStroke.Thickness = 2
    buttonTextStroke.Parent = sliderButton

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(1, 0)
    buttonCorner.Parent = sliderButton

    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0.8, 0, 0, 30)
    closeButton.Position = UDim2.new(0.1, 0, 0, 120)
    closeButton.BackgroundColor3 = Color3.fromRGB(120, 60, 0)
    closeButton.Text = "–ó–ê–ö–†–´–¢–¨"
    closeButton.TextColor3 = Color3.fromRGB(255, 140, 0)
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.TextSize = 12
    closeButton.Parent = frame

    local closeTextStroke = Instance.new("UIStroke")
    closeTextStroke.Color = Color3.fromRGB(0, 0, 0)
    closeTextStroke.Thickness = 2
    closeTextStroke.Parent = closeButton

    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 8)
    closeCorner.Parent = closeButton

    sliderButton.MouseButton1Down:Connect(function()
        local connection
        connection = UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                local relativeX = math.clamp(input.Position.X - sliderBackground.AbsolutePosition.X, 0, sliderBackground.AbsoluteSize.X)
                local newSize = math.floor((relativeX / sliderBackground.AbsoluteSize.X) * 19) + 1
                
                settings.HitboxSize = newSize
                sliderButton.Position = UDim2.new(relativeX / sliderBackground.AbsoluteSize.X, -10, 0.5, -10)
                sliderFill.Size = UDim2.new(relativeX / sliderBackground.AbsoluteSize.X, 0, 1, 0)
                sizeDisplay.Text = "–†–∞–∑–º–µ—Ä: " .. newSize
            end
        end)

        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                connection:Disconnect()
            end
        end)
    end)

    closeButton.MouseButton1Click:Connect(function()
        hitboxGUI.Enabled = false
        isHitboxGUIVisible = false
    end)

    return hitboxGUI
end

local function ResizeBodyPart(targetPlayer, partName, size)
    if targetPlayer == player then return end  
    if not settings.HitboxEnabled then return end

    local character = targetPlayer.Character
    if not character then return end

    local part = character:FindFirstChild(partName)
    if not part then return end

    if not originalSizes[part] then
        originalSizes[part] = part.Size
    end

    local minSize = 1
    local newSize = math.max(size, minSize)

    part.Size = Vector3.new(newSize, newSize, newSize)
    part.Transparency = 0.3
    part.CanCollide = false
    part.Massless = true
    part.BrickColor = BrickColor.new("Bright orange")
    part.Material = Enum.Material.Neon

    if not part:FindFirstChild("HitboxLight") then
        local pointLight = Instance.new("PointLight")
        pointLight.Name = "HitboxLight"
        pointLight.Brightness = 3
        pointLight.Range = 15
        pointLight.Color = Color3.fromRGB(255, 140, 0)
        pointLight.Parent = part
    end
end

local function ResetBodyPart(targetPlayer, partName)
    local character = targetPlayer.Character
    if not character then return end

    local part = character:FindFirstChild(partName)
    if not part then return end

    if originalSizes[part] then
        part.Size = originalSizes[part]
        part.Transparency = 0
        part.CanCollide = true
        part.BrickColor = BrickColor.new("Medium stone grey")
        part.Material = Enum.Material.Plastic
        
        local light = part:FindFirstChild("HitboxLight")
        if light then
            light:Destroy()
        end
    end
end

local function updateOtherPlayers()
    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character then
            for _, partName in ipairs(bodyParts) do
                if settings.HitboxEnabled then
                    ResizeBodyPart(otherPlayer, partName, settings.HitboxSize)
                else
                    ResetBodyPart(otherPlayer, partName)
                end
            end
        end
    end
end

RunService.Heartbeat:Connect(function()
    updateOtherPlayers()
end)

local chamsEnabled = false
local highlights = {}

local function createHighlightForPlayer(targetPlayer, character)
    if not character or not targetPlayer or targetPlayer == player then return end
    
    if highlights[targetPlayer] then
        highlights[targetPlayer]:Destroy()
        highlights[targetPlayer] = nil
    end
    
    local highlight = Instance.new("Highlight")
    highlight.Name = "Chams_" .. targetPlayer.Name
    highlight.FillColor = Color3.fromRGB(255, 165, 0)
    highlight.FillTransparency = 0.7
    highlight.OutlineColor = Color3.fromRGB(255, 140, 0)
    highlight.OutlineTransparency = 0.3
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Adornee = character
    highlight.Parent = ScreenGui
    highlights[targetPlayer] = highlight
end

local function setupPlayer(targetPlayer)
    if targetPlayer == player then return end
    
    if targetPlayer.Character then
        task.spawn(function()
            task.wait(1)
            if chamsEnabled and targetPlayer.Character then
                createHighlightForPlayer(targetPlayer, targetPlayer.Character)
            end
        end)
    end
    
    targetPlayer.CharacterAdded:Connect(function(character)
        if chamsEnabled then
            task.wait(1)
            createHighlightForPlayer(targetPlayer, character)
        end
    end)
end

local function enableChams()
    if chamsEnabled then return end
    
    chamsEnabled = true
    
    for targetPlayer, highlight in pairs(highlights) do
        if highlight then
            highlight:Destroy()
        end
    end
    highlights = {}
    
    for _, targetPlayer in pairs(Players:GetPlayers()) do
        if targetPlayer ~= player then
            setupPlayer(targetPlayer)
        end
    end
    
    Players.PlayerAdded:Connect(function(newPlayer)
        if chamsEnabled then
            setupPlayer(newPlayer)
        end
    end)
end

local function disableChams()
    if not chamsEnabled then return end
    
    chamsEnabled = false
    
    for targetPlayer, highlight in pairs(highlights) do
        if highlight then
            highlight:Destroy()
        end
    end
    highlights = {}
end

local autoFireConnection
local isMouseHeld = false

local function holdLeftMouseButton()
    if not isMouseHeld then
        VirtualInputManager:SendMouseButtonEvent(mouse.X, mouse.Y, 0, true, game, 1)
        isMouseHeld = true
    end
end

local function releaseLeftMouseButton()
    if isMouseHeld then
        VirtualInputManager:SendMouseButtonEvent(mouse.X, mouse.Y, 0, false, game, 1)
        isMouseHeld = false
    end
end

local function startAutoFire()
    if autoFireConnection then autoFireConnection:Disconnect() end
    
    autoFireConnection = RunService.Heartbeat:Connect(function()
        if not settings.AutoFire then 
            releaseLeftMouseButton()
            return 
        end
        holdLeftMouseButton()
    end)
end

local killAllConnection

local function startKillAll()
    if killAllConnection then 
        killAllConnection:Disconnect()
        killAllConnection = nil
    end
    
    if not settings.KillAllEnabled then return end
    
    killAllConnection = RunService.Heartbeat:Connect(function()
        if not settings.KillAllEnabled then
            if killAllConnection then
                killAllConnection:Disconnect()
                killAllConnection = nil
            end
            return
        end
        
        local targetPlayer = nil
        for _, v in pairs(Players:GetPlayers()) do
            if v ~= player and v.Character then
                local humanoid = v.Character:FindFirstChild("Humanoid")
                if humanoid and humanoid.Health > 0 then
                    targetPlayer = v
                    break
                end
            end
        end
        
        if targetPlayer and targetPlayer.Character then
            settings.AutoFire = true
            startAutoFire()
        else
            settings.KillAllEnabled = false
            settings.AutoFire = false
            buttonInstances["KILL ALL: OFF"].Text = "KILL ALL: OFF"
            buttonInstances["KILL ALL: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
            buttonInstances["AUTO FIRE: OFF"].Text = "AUTO FIRE: OFF"
            buttonInstances["AUTO FIRE: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
            releaseLeftMouseButton()
        end
    end)
end

local speedConnection
local isSpeedActive = false

local function startSpeedGlitch()
    if speedConnection then speedConnection:Disconnect() end
    isSpeedActive = true
    
    speedConnection = RunService.Heartbeat:Connect(function()
        local character = player.Character
        if character and isSpeedActive then
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = 50
            end
        end
    end)
end

local spinConnection
local isSpinActive = false

local function startSpin()
    if spinConnection then spinConnection:Disconnect() end
    isSpinActive = true
    
    spinConnection = RunService.Heartbeat:Connect(function()
        local character = player.Character
        if character and isSpinActive then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                local currentCFrame = rootPart.CFrame
                local newRotation = currentCFrame * CFrame.Angles(0, math.rad(10), 0)
                rootPart.CFrame = newRotation
            end
        end
    end)
end

local antiKillConnection
local safePosition = Vector3.new(0, 25, 0)
local lastPlayerHealth = 100

local function teleportToSafePosition()
    pcall(function()
        if player.Character then
            local root = player.Character:FindFirstChild("HumanoidRootPart")
            if root then
                root.CFrame = CFrame.new(safePosition)
            end
        end
    end)
end

local function startAntiKill()
    if antiKillConnection then 
        antiKillConnection:Disconnect()
        antiKillConnection = nil
    end
    
    antiKillConnection = RunService.Heartbeat:Connect(function()
        pcall(function()
            if player.Character and settings.AntiKill then
                local humanoid = player.Character:FindFirstChild("Humanoid")
                if humanoid then
                    local currentHealth = humanoid.Health
                    
                    if currentHealth < lastPlayerHealth then
                        teleportToSafePosition()
                    end
                    
                    lastPlayerHealth = currentHealth
                end
            end
        end)
    end)
end

local isGUIVisible = true
local isAnimating = false
local savedPosition = MainFrame.Position

local function hideGUI()
    if isAnimating then return end
    isAnimating = true
    
    savedPosition = MainFrame.Position
    
    hideHalloweenDecorations()
    
    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    
    local hideTween = TweenService:Create(MainFrame, tweenInfo, {
        BackgroundTransparency = 1,
        Position = UDim2.new(0.5, -180, 0.5, -150)
    })
    
    for _, child in ipairs(MainFrame:GetDescendants()) do
        if child:IsA("TextLabel") or child:IsA("TextButton") then
            local textTween = TweenService:Create(child, tweenInfo, {TextTransparency = 1})
            textTween:Play()
        end
        if child:IsA("Frame") and child.BackgroundTransparency < 1 then
            local bgTween = TweenService:Create(child, tweenInfo, {BackgroundTransparency = 1})
            bgTween:Play()
        end
        if child:FindFirstChild("UIStroke") then
            local strokeTween = TweenService:Create(child.UIStroke, tweenInfo, {Transparency = 1})
            strokeTween:Play()
        end
    end
    
    local strokeTween = TweenService:Create(UIStroke, tweenInfo, {Transparency = 1})
    strokeTween:Play()
    
    hideTween:Play()
    
    hideTween.Completed:Connect(function()
        MainFrame.Visible = false
        isGUIVisible = false
        isAnimating = false
    end)
end

local function showGUI()
    if isAnimating then return end
    isAnimating = true
    
    MainFrame.Visible = true
    MainFrame.Position = savedPosition
    
    showHalloweenDecorations()
    
    local tweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    
    local showTween = TweenService:Create(MainFrame, tweenInfo, {
        BackgroundTransparency = 0.1,
        Position = savedPosition
    })
    
    for _, child in ipairs(MainFrame:GetDescendants()) do
        if child:IsA("TextLabel") or child:IsA("TextButton") then
            local textTween = TweenService:Create(child, tweenInfo, {TextTransparency = 0})
            textTween:Play()
        end
        if child:IsA("Frame") and child.BackgroundTransparency < 1 then
            local bgTween = TweenService:Create(child, tweenInfo, {BackgroundTransparency = 0.2})
            bgTween:Play()
        end
        if child:FindFirstChild("UIStroke") then
            local strokeTween = TweenService:Create(child.UIStroke, tweenInfo, {Transparency = 0})
            strokeTween:Play()
        end
    end
    
    local strokeTween = TweenService:Create(UIStroke, tweenInfo, {Transparency = 0})
    strokeTween:Play()
    
    showTween:Play()
    
    showTween.Completed:Connect(function()
        isGUIVisible = true
        isAnimating = false
    end)
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.G then
        if isGUIVisible then
            hideGUI()
        else
            showGUI()
        end
    end
end)

local dragging, dragStart, startPos = false
MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging, dragStart, startPos = true, input.Position, MainFrame.Position
    end
end)
MainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

for name, btn in pairs(tabButtons) do
    btn.MouseButton1Click:Connect(function()
        for k, page in pairs(pages) do
            page.Visible = (k == name)
        end
    end)
end

buttonInstances["HITBOX: OFF"].MouseButton1Click:Connect(function()
    settings.HitboxEnabled = not settings.HitboxEnabled
    if settings.HitboxEnabled then
        buttonInstances["HITBOX: OFF"].Text = "HITBOX: ON"
        buttonInstances["HITBOX: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
        if not isHitboxGUIVisible then
            createHitboxGUI()
            hitboxGUI.Enabled = true
            isHitboxGUIVisible = true
        end
    else
        buttonInstances["HITBOX: OFF"].Text = "HITBOX: OFF"
        buttonInstances["HITBOX: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
        for _, otherPlayer in ipairs(Players:GetPlayers()) do
            if otherPlayer ~= player then
                ResetBodyPart(otherPlayer, "Head")
            end
        end
        if hitboxGUI then
            hitboxGUI.Enabled = false
        end
    end
end)

buttonInstances["AUTO FIRE: OFF"].MouseButton1Click:Connect(function()
    settings.AutoFire = not settings.AutoFire
    if settings.AutoFire then
        buttonInstances["AUTO FIRE: OFF"].Text = "AUTO FIRE: ON"
        buttonInstances["AUTO FIRE: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
        startAutoFire()
    else
        buttonInstances["AUTO FIRE: OFF"].Text = "AUTO FIRE: OFF"
        buttonInstances["AUTO FIRE: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
        if autoFireConnection then
            autoFireConnection:Disconnect()
            autoFireConnection = nil
        end
        releaseLeftMouseButton()
    end
end)

buttonInstances["KILL ALL: OFF"].MouseButton1Click:Connect(function()
    settings.KillAllEnabled = not settings.KillAllEnabled

    if settings.KillAllEnabled then
        buttonInstances["KILL ALL: OFF"].Text = "KILL ALL: ON"
        buttonInstances["KILL ALL: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
        startKillAll()
    else
        buttonInstances["KILL ALL: OFF"].Text = "KILL ALL: OFF"
        buttonInstances["KILL ALL: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
        if killAllConnection then
            killAllConnection:Disconnect()
            killAllConnection = nil
        end
        settings.AutoFire = false
        buttonInstances["AUTO FIRE: OFF"].Text = "AUTO FIRE: OFF"
        buttonInstances["AUTO FIRE: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
        releaseLeftMouseButton()
    end
end)

buttonInstances["SPEED: OFF"].MouseButton1Click:Connect(function()
    if isSpeedActive then
        if speedConnection then speedConnection:Disconnect() end
        isSpeedActive = false
        buttonInstances["SPEED: OFF"].Text = "SPEED: OFF"
        buttonInstances["SPEED: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then humanoid.WalkSpeed = 16 end
        end
    else
        startSpeedGlitch()
        buttonInstances["SPEED: OFF"].Text = "SPEED: ON"
        buttonInstances["SPEED: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
    end
end)

buttonInstances["SPIN: OFF"].MouseButton1Click:Connect(function()
    if isSpinActive then
        if spinConnection then spinConnection:Disconnect() end
        isSpinActive = false
        buttonInstances["SPIN: OFF"].Text = "SPIN: OFF"
        buttonInstances["SPIN: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
    else
        startSpin()
        buttonInstances["SPIN: OFF"].Text = "SPIN: ON"
        buttonInstances["SPIN: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
    end
end)

buttonInstances["ANTI KILL: OFF"].MouseButton1Click:Connect(function()
    settings.AntiKill = not settings.AntiKill
    if settings.AntiKill then
        buttonInstances["ANTI KILL: OFF"].Text = "ANTI KILL: ON"
        buttonInstances["ANTI KILL: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
        startAntiKill()
    else
        buttonInstances["ANTI KILL: OFF"].Text = "ANTI KILL: OFF"
        buttonInstances["ANTI KILL: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
        if antiKillConnection then
            antiKillConnection:Disconnect()
            antiKillConnection = nil
        end
    end
end)

buttonInstances["CHAMS: OFF"].MouseButton1Click:Connect(function()
    settings.ChamsEnabled = not settings.ChamsEnabled
    
    if settings.ChamsEnabled then
        buttonInstances["CHAMS: OFF"].Text = "CHAMS: ON"
        buttonInstances["CHAMS: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
        enableChams()
    else
        buttonInstances["CHAMS: OFF"].Text = "CHAMS: OFF"
        buttonInstances["CHAMS: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
        disableChams()
    end
end)

player.CharacterAdded:Connect(function(character)
    if settings.AntiKill then
        task.wait(2)
        startAntiKill()
    end
    if isSpeedActive then
        task.wait(2)
        startSpeedGlitch()
    end
    if settings.ChamsEnabled then
        enableChams()
    end
end)

for _, otherPlayer in ipairs(Players:GetPlayers()) do
    if otherPlayer ~= player then
        setupPlayer(otherPlayer)
    end
end
