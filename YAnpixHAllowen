local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

local player = Players.LocalPlayer
local mouse = player:GetMouse()

local settings = {
    Enabled = false,
    FOV = 100,
    VisibleCheck = false,
    AutoShoot = true,
    ShootDelay = 0.1,
    AimAtHead = true,
    KillAllEnabled = false,
    ChamsEnabled = false,
    AntiKill = false
}

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "BANDITS9SCRIPT_GUI"
ScreenGui.Parent = CoreGui
ScreenGui.ResetOnSpawn = false
ScreenGui.DisplayOrder = 9999
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Halloween decorations
local halloweenEmojis = {"üéÉ", "üëª", "üï∑Ô∏è"}
local decorations = {}

local function createHalloweenDecorations()
    for i = 1, 15 do
        local emoji = Instance.new("TextLabel")
        emoji.Name = "HalloweenEmoji_" .. i
        emoji.Size = UDim2.new(0, 30, 0, 30)
        emoji.Position = UDim2.new(
            math.random() * 0.9,
            math.random(-50, 50),
            math.random() * 0.9, 
            math.random(-50, 50)
        )
        emoji.BackgroundTransparency = 1
        emoji.Text = halloweenEmojis[math.random(1, 3)]
        emoji.TextColor3 = Color3.fromRGB(255, 165, 0)
        emoji.TextSize = math.random(20, 30)
        emoji.Font = Enum.Font.SourceSansBold
        emoji.ZIndex = 9997
        emoji.Parent = ScreenGui
        
        table.insert(decorations, emoji)
    end
end

createHalloweenDecorations()

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 360, 0, 250)
MainFrame.Position = UDim2.new(0.5, -180, 0.5, -125)
MainFrame.BackgroundColor3 = Color3.fromRGB(40, 20, 0)
MainFrame.BackgroundTransparency = 0.1
MainFrame.BorderSizePixel = 0
MainFrame.ZIndex = 9999
MainFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = MainFrame

local UIStroke = Instance.new("UIStroke")
UIStroke.Color = Color3.fromRGB(255, 140, 0)
UIStroke.Thickness = 3
UIStroke.Parent = MainFrame

-- Neon title effect
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 28)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundColor3 = Color3.fromRGB(60, 30, 0)
Title.BackgroundTransparency = 0.2
Title.Text = "BANDITS9SCRIPT‚Ñ¢"
Title.TextColor3 = Color3.fromRGB(255, 165, 0)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 16
Title.BorderSizePixel = 0
Title.ZIndex = 10000
Title.Parent = MainFrame

-- Neon text effect
local TitleTextStroke = Instance.new("UIStroke")
TitleTextStroke.Color = Color3.fromRGB(0, 0, 0)
TitleTextStroke.Thickness = 2
TitleTextStroke.Parent = Title

local TitleGlow = Instance.new("UIStroke")
TitleGlow.Color = Color3.fromRGB(255, 69, 0)
TitleGlow.Thickness = 3
TitleGlow.Transparency = 0.5
TitleGlow.Parent = Title

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 8)
TitleCorner.Parent = Title

local TitleStroke = Instance.new("UIStroke")
TitleStroke.Color = Color3.fromRGB(255, 140, 0)
TitleStroke.Thickness = 2
TitleStroke.Parent = Title

local TabsFrame = Instance.new("Frame")
TabsFrame.Size = UDim2.new(0, 100, 1, -34)
TabsFrame.Position = UDim2.new(0, 8, 0, 34)
TabsFrame.BackgroundTransparency = 1
TabsFrame.ZIndex = 10000
TabsFrame.Parent = MainFrame

local tabNames = {"Main", "Legit", "ESP/CHAMS", "Credits"}
local tabButtons = {}
for i, name in ipairs(tabNames) do
    local btn = Instance.new("TextButton")
    btn.Name = name .. "Tab"
    btn.Size = UDim2.new(1, 0, 0, 30)
    btn.Position = UDim2.new(0, 0, 0, (i-1)*35)
    btn.BackgroundColor3 = Color3.fromRGB(80, 40, 0)
    btn.Text = name
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = 12
    btn.TextColor3 = Color3.fromRGB(255, 140, 0)
    btn.BorderSizePixel = 0
    btn.ZIndex = 10001
    btn.Parent = TabsFrame
    
    local btnTextStroke = Instance.new("UIStroke")
    btnTextStroke.Color = Color3.fromRGB(0, 0, 0)
    btnTextStroke.Thickness = 2
    btnTextStroke.Parent = btn
    
    local c = Instance.new("UICorner")
    c.CornerRadius = UDim.new(0,6)
    c.Parent = btn
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(255, 140, 0)
    stroke.Thickness = 2
    stroke.Parent = btn
    tabButtons[name] = btn
end

local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(1, -116, 1, -34)
ContentFrame.Position = UDim2.new(0, 108, 0, 34)
ContentFrame.BackgroundTransparency = 1
ContentFrame.ZIndex = 10000
ContentFrame.Parent = MainFrame

local pages = {}
for _, name in ipairs(tabNames) do
    local page = Instance.new("Frame")
    page.Name = name .. "Page"
    page.Size = UDim2.new(1, 0, 1, 0)
    page.Position = UDim2.new(0, 0, 0, 0)
    page.BackgroundTransparency = 1
    page.Visible = false
    page.ZIndex = 10000
    page.Parent = ContentFrame
    pages[name] = page
end
pages["Main"].Visible = true

local buttonInstances = {}

local function addButtonToPage(page, name, x, y, w, h, textSize)
    local btn = Instance.new("TextButton")
    btn.Name = name:gsub(" ", "_")
    btn.Size = UDim2.new(0, w or 140, 0, h or 30)
    btn.Position = UDim2.new(0, x or 0, 0, y or 0)
    btn.BackgroundColor3 = Color3.fromRGB(120, 60, 0)
    btn.Text = name
    btn.TextColor3 = Color3.fromRGB(255, 140, 0)
    btn.Font = Enum.Font.SourceSansBold
    btn.TextSize = textSize or 14
    btn.BorderSizePixel = 0
    btn.ZIndex = 10001
    btn.Parent = page
    
    local btnTextStroke = Instance.new("UIStroke")
    btnTextStroke.Color = Color3.fromRGB(0, 0, 0)
    btnTextStroke.Thickness = 2
    btnTextStroke.Parent = btn
    
    local uc = Instance.new("UICorner")
    uc.CornerRadius = UDim.new(0,8)
    uc.Parent = btn
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(255, 140, 0)
    stroke.Thickness = 2
    stroke.Parent = btn
    buttonInstances[name] = btn
    return btn
end

addButtonToPage(pages["Main"], "AIMBOT: OFF", 10, 8, 160, 32, 14)
addButtonToPage(pages["Main"], "KILL ALL: OFF", 10, 52, 160, 32, 14)

addButtonToPage(pages["Legit"], "WALL CHECK: OFF", 10, 8, 160, 32, 14)
addButtonToPage(pages["Legit"], "SPEED: OFF", 10, 52, 160, 32, 14)
addButtonToPage(pages["Legit"], "SPIN: OFF", 10, 96, 160, 32, 14)
addButtonToPage(pages["Legit"], "ANTI KILL: OFF", 10, 140, 160, 32, 14)

addButtonToPage(pages["ESP/CHAMS"], "CHAMS: OFF", 10, 8, 160, 32, 14)

local creditsLabel = Instance.new("TextLabel")
creditsLabel.Size = UDim2.new(1, -12, 1, -12)
creditsLabel.Position = UDim2.new(0, 6, 0, 6)
creditsLabel.BackgroundTransparency = 1
creditsLabel.Text = "BANDITS9SCRIPT‚Ñ¢\n\nBETA 00.2\n\n–ü–û–î–ü–ò–®–ò–°–¨ –ù–ê –¢–ï–õ–ï–ì–†–ê–ú –ü–õ–ò–°"
creditsLabel.TextColor3 = Color3.fromRGB(255, 140, 0)
creditsLabel.Font = Enum.Font.SourceSansBold
creditsLabel.TextSize = 16
creditsLabel.TextWrapped = true
creditsLabel.TextYAlignment = Enum.TextYAlignment.Top
creditsLabel.ZIndex = 10000
creditsLabel.Parent = pages["Credits"]

local creditsTextStroke = Instance.new("UIStroke")
creditsTextStroke.Color = Color3.fromRGB(0, 0, 0)
creditsTextStroke.Thickness = 2
creditsTextStroke.Parent = creditsLabel

local creditsStroke = Instance.new("UIStroke")
creditsStroke.Color = Color3.fromRGB(255, 140, 0)
creditsStroke.Thickness = 2
creditsStroke.Parent = creditsLabel

-- Orange FOV Circle
local FOVCircle = Instance.new("Frame")
FOVCircle.Name = "FOVCircle"
FOVCircle.Size = UDim2.new(0, settings.FOV * 2, 0, settings.FOV * 2)
FOVCircle.Position = UDim2.new(0, mouse.X - settings.FOV, 0, mouse.Y - settings.FOV)
FOVCircle.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
FOVCircle.BackgroundTransparency = 0.9
FOVCircle.BorderSizePixel = 0
FOVCircle.Visible = true
FOVCircle.ZIndex = 9998
FOVCircle.Parent = ScreenGui
local CircleCorner = Instance.new("UICorner")
CircleCorner.CornerRadius = UDim.new(1,0)
CircleCorner.Parent = FOVCircle
local CircleStroke = Instance.new("UIStroke")
CircleStroke.Color = Color3.fromRGB(255, 140, 0)
CircleStroke.Thickness = 2
CircleStroke.Parent = FOVCircle

-- Rest of the code remains exactly the same...
local chamsEnabled = false
local highlights = {}
local healthConnections = {}
local lastHealth = {}

local function createHighlightForPlayer(targetPlayer, character)
    if not character or not targetPlayer or targetPlayer == player then return end
    
    if highlights[targetPlayer] then
        highlights[targetPlayer]:Destroy()
        highlights[targetPlayer] = nil
    end
    
    if healthConnections[targetPlayer] then
        healthConnections[targetPlayer]:Disconnect()
        healthConnections[targetPlayer] = nil
    end
    
    local highlight = Instance.new("Highlight")
    highlight.Name = "Chams_" .. targetPlayer.Name
    highlight.FillColor = Color3.fromRGB(255, 165, 0)
    highlight.FillTransparency = 0.7
    highlight.OutlineColor = Color3.fromRGB(255, 140, 0)
    highlight.OutlineTransparency = 0.3
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Adornee = character
    highlight.Parent = ScreenGui
    highlights[targetPlayer] = highlight
    
    local humanoid = character:WaitForChild("Humanoid", 5)
    if humanoid then
        lastHealth[targetPlayer] = humanoid.Health
        
        healthConnections[targetPlayer] = humanoid.HealthChanged:Connect(function(newHealth)
            local oldHealth = lastHealth[targetPlayer] or newHealth
            
            if newHealth < oldHealth then
                local highlight = highlights[targetPlayer]
                if highlight and highlight.Parent then
                    highlight.FillColor = Color3.fromRGB(255, 69, 0)
                    highlight.OutlineColor = Color3.fromRGB(255, 69, 0)
                    
                    task.delay(0.5, function()
                        if highlight and highlight.Parent then
                            highlight.FillColor = Color3.fromRGB(255, 165, 0)
                            highlight.OutlineColor = Color3.fromRGB(255, 140, 0)
                        end
                    end)
                end
            end
            
            lastHealth[targetPlayer] = newHealth
        end)
    end
end

local function setupPlayer(targetPlayer)
    if targetPlayer == player then return end
    
    if targetPlayer.Character then
        task.spawn(function()
            task.wait(1)
            if chamsEnabled and targetPlayer.Character then
                createHighlightForPlayer(targetPlayer, targetPlayer.Character)
            end
        end)
    end
    
    targetPlayer.CharacterAdded:Connect(function(character)
        if chamsEnabled then
            task.wait(1)
            createHighlightForPlayer(targetPlayer, character)
        end
    end)
end

local function enableChams()
    if chamsEnabled then return end
    
    chamsEnabled = true
    
    for targetPlayer, highlight in pairs(highlights) do
        if highlight then
            highlight:Destroy()
        end
    end
    highlights = {}
    
    for targetPlayer, connection in pairs(healthConnections) do
        if connection then
            connection:Disconnect()
        end
    end
    healthConnections = {}
    lastHealth = {}
    
    for _, targetPlayer in pairs(Players:GetPlayers()) do
        if targetPlayer ~= player then
            setupPlayer(targetPlayer)
        end
    end
    
    Players.PlayerAdded:Connect(function(newPlayer)
        if chamsEnabled then
            setupPlayer(newPlayer)
        end
    end)
    
    Players.PlayerRemoving:Connect(function(leftPlayer)
        if highlights[leftPlayer] then
            highlights[leftPlayer]:Destroy()
            highlights[leftPlayer] = nil
        end
        if healthConnections[leftPlayer] then
            healthConnections[leftPlayer]:Disconnect()
            healthConnections[leftPlayer] = nil
        end
        lastHealth[leftPlayer] = nil
    end)
end

local function disableChams()
    if not chamsEnabled then return end
    
    chamsEnabled = false
    
    for targetPlayer, highlight in pairs(highlights) do
        if highlight then
            highlight:Destroy()
        end
    end
    highlights = {}
    
    for targetPlayer, connection in pairs(healthConnections) do
        if connection then
            connection:Disconnect()
        end
    end
    healthConnections = {}
    lastHealth = {}
end

local isGUIVisible = true
local isAnimating = false
local savedPosition = MainFrame.Position

local function hideGUI()
    if isAnimating then return end
    isAnimating = true
    
    savedPosition = MainFrame.Position
    
    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    
    local hideTween = TweenService:Create(MainFrame, tweenInfo, {
        BackgroundTransparency = 1,
        Position = UDim2.new(0.5, -180, 0.5, -150)
    })
    
    for _, child in ipairs(MainFrame:GetDescendants()) do
        if child:IsA("TextLabel") or child:IsA("TextButton") then
            local textTween = TweenService:Create(child, tweenInfo, {TextTransparency = 1})
            textTween:Play()
        end
        if child:IsA("Frame") and child.BackgroundTransparency < 1 then
            local bgTween = TweenService:Create(child, tweenInfo, {BackgroundTransparency = 1})
            bgTween:Play()
        end
        if child:FindFirstChild("UIStroke") then
            local strokeTween = TweenService:Create(child.UIStroke, tweenInfo, {Transparency = 1})
            strokeTween:Play()
        end
    end
    
    local strokeTween = TweenService:Create(UIStroke, tweenInfo, {Transparency = 1})
    strokeTween:Play()
    
    hideTween:Play()
    
    hideTween.Completed:Connect(function()
        MainFrame.Visible = false
        isGUIVisible = false
        isAnimating = false
    end)
end

local function showGUI()
    if isAnimating then return end
    isAnimating = true
    
    MainFrame.Visible = true
    MainFrame.Position = savedPosition
    
    local tweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    
    local showTween = TweenService:Create(MainFrame, tweenInfo, {
        BackgroundTransparency = 0.1,
        Position = savedPosition
    })
    
    for _, child in ipairs(MainFrame:GetDescendants()) do
        if child:IsA("TextLabel") or child:IsA("TextButton") then
            local textTween = TweenService:Create(child, tweenInfo, {TextTransparency = 0})
            textTween:Play()
        end
        if child:IsA("Frame") and child.BackgroundTransparency < 1 then
            local bgTween = TweenService:Create(child, tweenInfo, {BackgroundTransparency = 0.2})
            bgTween:Play()
        end
        if child:FindFirstChild("UIStroke") then
            local strokeTween = TweenService:Create(child.UIStroke, tweenInfo, {Transparency = 0})
            strokeTween:Play()
        end
    end
    
    local strokeTween = TweenService:Create(UIStroke, tweenInfo, {Transparency = 0})
    strokeTween:Play()
    
    showTween:Play()
    
    showTween.Completed:Connect(function()
        isGUIVisible = true
        isAnimating = false
    end)
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.G then
        if isGUIVisible then
            hideGUI()
        else
            showGUI()
        end
    end
end)

local dragging, dragStart, startPos = false
MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging, dragStart, startPos = true, input.Position, MainFrame.Position
    end
end)
MainFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

for name, btn in pairs(tabButtons) do
    btn.MouseButton1Click:Connect(function()
        for k, page in pairs(pages) do
            page.Visible = (k == name)
        end
    end)
end

local aimbotConnection, speedConnection, spinConnection, killAllConnection, antiKillConnection
local isSpeedActive, isSpinActive = false, false
local currentTarget = nil
local isMouseHeld = false
local lastShootTime = 0

local function holdLeftMouseButton()
    if not isMouseHeld then
        VirtualInputManager:SendMouseButtonEvent(mouse.X, mouse.Y, 0, true, game, 1)
        isMouseHeld = true
    end
end

local function releaseLeftMouseButton()
    if isMouseHeld then
        VirtualInputManager:SendMouseButtonEvent(mouse.X, mouse.Y, 0, false, game, 1)
        isMouseHeld = false
    end
end

local function isPlayerVisible(targetPlayer)
    if not settings.VisibleCheck then return true end
    local camera = Workspace.CurrentCamera
    local targetCharacter = targetPlayer.Character
    if not targetCharacter then return false end
    
    local head = targetCharacter:FindFirstChild("Head")
    if not head then return false end
    
    local rayOrigin = camera.CFrame.Position
    local rayDirection = (head.Position - rayOrigin).Unit * 1000
    
    local ray = Ray.new(rayOrigin, rayDirection)
    local ignoreList = {player.Character, camera}
    local hit, hitPosition = Workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)
    
    if hit then
        local hitCharacter = hit:FindFirstAncestorOfClass("Model")
        return hitCharacter == targetCharacter
    end
    
    return false
end

local function getClosestPlayerInFOV()
    local closestPlayer, closestDistance = nil, settings.FOV
    local camera = Workspace.CurrentCamera
    
    for _, v in pairs(Players:GetPlayers()) do
        if v == player then continue end
        if not v.Character then continue end
        
        local humanoid = v.Character:FindFirstChild("Humanoid")
        if not humanoid or humanoid.Health <= 0 then continue end
        
        local head = v.Character:FindFirstChild("Head")
        if not head then continue end
        
        local screenPoint, onScreen = camera:WorldToViewportPoint(head.Position)
        
        if onScreen then
            local mousePos = Vector2.new(mouse.X, mouse.Y)
            local playerPos = Vector2.new(screenPoint.X, screenPoint.Y)
            local distance = (mousePos - playerPos).Magnitude
            
            if distance <= closestDistance then
                local isVisible = isPlayerVisible(v)
                if isVisible then
                    closestDistance, closestPlayer = distance, v
                end
            end
        end
    end
    return closestPlayer, closestDistance
end

local function aimAtPlayer(target)
    if not target or not target.Character then 
        releaseLeftMouseButton()
        return false 
    end
    
    local camera = Workspace.CurrentCamera
    local targetCharacter = target.Character
    
    local head = targetCharacter:FindFirstChild("Head")
    if not head then 
        releaseLeftMouseButton()
        return false 
    end
    
    local targetPosition = head.Position
    
    local currentCFrame = camera.CFrame
    local targetCFrame = CFrame.lookAt(currentCFrame.Position, targetPosition)
    camera.CFrame = currentCFrame:Lerp(targetCFrame, 0.9)
    
    if settings.AutoShoot then
        local currentTime = tick()
        if currentTime - lastShootTime >= settings.ShootDelay then
            holdLeftMouseButton()
            lastShootTime = currentTime
        end
    end
    
    return true
end

local function startAimbot()
    if aimbotConnection then aimbotConnection:Disconnect() end
    
    aimbotConnection = RunService.RenderStepped:Connect(function()
        if not settings.Enabled then 
            FOVCircle.UIStroke.Color = Color3.fromRGB(255, 140, 0)
            releaseLeftMouseButton()
            return 
        end
        
        local closestPlayer, distance = getClosestPlayerInFOV()
        if closestPlayer then
            local success = aimAtPlayer(closestPlayer)
            if success then
                FOVCircle.UIStroke.Color = Color3.fromRGB(50, 255, 50)
                currentTarget = closestPlayer
            else
                FOVCircle.UIStroke.Color = Color3.fromRGB(255, 255, 0)
                releaseLeftMouseButton()
            end
        else
            FOVCircle.UIStroke.Color = Color3.fromRGB(255, 140, 0)
            releaseLeftMouseButton()
            currentTarget = nil
        end
    end)
end

local function getRandomAlivePlayer()
    local alivePlayers = {}
    for _, v in pairs(Players:GetPlayers()) do
        if v == player then continue end
        if not v.Character then continue end
        local humanoid = v.Character:FindFirstChild("Humanoid")
        if humanoid and humanoid.Health > 0 then
            table.insert(alivePlayers, v)
        end
    end
    return #alivePlayers > 0 and alivePlayers[math.random(1, #alivePlayers)] or nil
end

local function teleportToPlayer(targetPlayer)
    if not targetPlayer or not targetPlayer.Character then return false end
    local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    local myRoot = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if targetRoot and myRoot then
        local offset = Vector3.new(math.random(-5, 5), 0, math.random(-5, 5))
        myRoot.CFrame = targetRoot.CFrame + offset
        return true
    end
    return false
end

local function isPlayerAlive(targetPlayer)
    if not targetPlayer or not targetPlayer.Character then return false end
    local humanoid = targetPlayer.Character:FindFirstChild("Humanoid")
    return humanoid and humanoid.Health > 0
end

local function startSpeedGlitch()
    if speedConnection then speedConnection:Disconnect() end
    isSpeedActive = true
    
    speedConnection = RunService.Heartbeat:Connect(function()
        local character = player.Character
        if character and isSpeedActive then
            local humanoid = character:FindFirstChild("Humanoid")
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if humanoid and rootPart then
                humanoid.WalkSpeed = 100
                if humanoid.Jump then
                    local camera = Workspace.CurrentCamera
                    local direction = camera.CFrame.LookVector
                    rootPart.Velocity = rootPart.Velocity + direction * 100
                end
            end
        end
    end)
end

local function startSpin()
    if spinConnection then spinConnection:Disconnect() end
    isSpinActive = true
    
    spinConnection = RunService.Heartbeat:Connect(function()
        local character = player.Character
        if character and isSpinActive then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                local currentCFrame = rootPart.CFrame
                local newRotation = currentCFrame * CFrame.Angles(0, math.rad(50), 0)
                rootPart.CFrame = newRotation
            end
        end
    end)
end

local function startKillAll()
    if killAllConnection then 
        killAllConnection:Disconnect()
        killAllConnection = nil
    end
    
    if not settings.KillAllEnabled then return end
    
    currentTarget = getRandomAlivePlayer()
    if not currentTarget then
        settings.KillAllEnabled = false
        buttonInstances["KILL ALL: OFF"].Text = "KILL ALL: OFF"
        buttonInstances["KILL ALL: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
        return
    end
    
    teleportToPlayer(currentTarget)

    killAllConnection = RunService.Heartbeat:Connect(function()
        if not settings.KillAllEnabled then
            if killAllConnection then
                killAllConnection:Disconnect()
                killAllConnection = nil
            end
            return
        end
        
        if not isPlayerAlive(currentTarget) then
            currentTarget = getRandomAlivePlayer()
            if currentTarget then
                teleportToPlayer(currentTarget)
            else
                settings.KillAllEnabled = false
                buttonInstances["KILL ALL: OFF"].Text = "KILL ALL: OFF"
                buttonInstances["KILL ALL: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
                return
            end
        end
        
        local myCharacter = player.Character
        local myRoot = myCharacter and myCharacter:FindFirstChild("HumanoidRootPart")
        local targetRoot = currentTarget.Character and currentTarget.Character:FindFirstChild("HumanoidRootPart")
        
        if myRoot and targetRoot then
            local angle = tick() * 10
            local radius = 5
            local x, z = math.cos(angle) * radius, math.sin(angle) * radius
            local offset = Vector3.new(x, 0, z)
            myRoot.CFrame = CFrame.new(targetRoot.Position + offset, targetRoot.Position)
            
            VirtualInputManager:SendMouseButtonEvent(mouse.X, mouse.Y, 0, true, game, 1)
            task.wait(0.1)
            VirtualInputManager:SendMouseButtonEvent(mouse.X, mouse.Y, 0, false, game, 1)
        end
    end)
end

local safePosition = Vector3.new(15, 25, 469)
local lastPlayerHealth = 100

local function teleportToSafePosition()
    pcall(function()
        if player.Character then
            local root = player.Character:FindFirstChild("HumanoidRootPart")
            if root then
                root.CFrame = CFrame.new(safePosition)
            end
        end
    end)
end

local function startAntiKill()
    if antiKillConnection then 
        antiKillConnection:Disconnect()
        antiKillConnection = nil
    end
    
    antiKillConnection = RunService.Heartbeat:Connect(function()
        pcall(function()
            if player.Character and settings.AntiKill then
                local humanoid = player.Character:FindFirstChild("Humanoid")
                if humanoid then
                    local currentHealth = humanoid.Health
                    
                    if currentHealth < lastPlayerHealth then
                        teleportToSafePosition()
                    end
                    
                    lastPlayerHealth = currentHealth
                end
            end
        end)
    end)
    
    player.CharacterAdded:Connect(function(char)
        wait(2)
        lastPlayerHealth = 100
        
        local humanoid = char:WaitForChild("Humanoid")
        
        while settings.AntiKill do
            wait(0.01)
            if humanoid.Health < lastPlayerHealth then
                teleportToSafePosition()
                lastPlayerHealth = humanoid.Health
            end
            lastPlayerHealth = humanoid.Health
        end
    end)
end

buttonInstances["AIMBOT: OFF"].MouseButton1Click:Connect(function()
    settings.Enabled = not settings.Enabled
    if settings.Enabled then
        buttonInstances["AIMBOT: OFF"].Text = "AIMBOT: ON"
        buttonInstances["AIMBOT: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
        startAimbot()
    else
        buttonInstances["AIMBOT: OFF"].Text = "AIMBOT: OFF"
        buttonInstances["AIMBOT: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
        if aimbotConnection then aimbotConnection:Disconnect() end
        releaseLeftMouseButton()
        FOVCircle.UIStroke.Color = Color3.fromRGB(255, 140, 0)
    end
end)

buttonInstances["KILL ALL: OFF"].MouseButton1Click:Connect(function()
    settings.KillAllEnabled = not settings.KillAllEnabled

    if settings.KillAllEnabled then
        buttonInstances["KILL ALL: OFF"].Text = "KILL ALL: ON"
        buttonInstances["KILL ALL: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
        startKillAll()
    else
        buttonInstances["KILL ALL: OFF"].Text = "KILL ALL: OFF"
        buttonInstances["KILL ALL: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
        if killAllConnection then
            killAllConnection:Disconnect()
            killAllConnection = nil
        end
    end
end)

buttonInstances["WALL CHECK: OFF"].MouseButton1Click:Connect(function()
    settings.VisibleCheck = not settings.VisibleCheck
    if settings.VisibleCheck then
        buttonInstances["WALL CHECK: OFF"].Text = "WALL CHECK: ON"
        buttonInstances["WALL CHECK: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
    else
        buttonInstances["WALL CHECK: OFF"].Text = "WALL CHECK: OFF"
        buttonInstances["WALL CHECK: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
    end
end)

buttonInstances["SPEED: OFF"].MouseButton1Click:Connect(function()
    if isSpeedActive then
        if speedConnection then speedConnection:Disconnect() end
        isSpeedActive = false
        buttonInstances["SPEED: OFF"].Text = "SPEED: OFF"
        buttonInstances["SPEED: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
        local character = player.Character
        if character then
            local humanoid = character:FindFirstChild("Humanoid")
            if humanoid then humanoid.WalkSpeed = 16 end
        end
    else
        startSpeedGlitch()
        buttonInstances["SPEED: OFF"].Text = "SPEED: ON"
        buttonInstances["SPEED: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
    end
end)

buttonInstances["SPIN: OFF"].MouseButton1Click:Connect(function()
    if isSpinActive then
        if spinConnection then spinConnection:Disconnect() end
        isSpinActive = false
        buttonInstances["SPIN: OFF"].Text = "SPIN: OFF"
        buttonInstances["SPIN: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
    else
        startSpin()
        buttonInstances["SPIN: OFF"].Text = "SPIN: ON"
        buttonInstances["SPIN: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
    end
end)

buttonInstances["ANTI KILL: OFF"].MouseButton1Click:Connect(function()
    settings.AntiKill = not settings.AntiKill
    if settings.AntiKill then
        buttonInstances["ANTI KILL: OFF"].Text = "ANTI KILL: ON"
        buttonInstances["ANTI KILL: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
        startAntiKill()
    else
        buttonInstances["ANTI KILL: OFF"].Text = "ANTI KILL: OFF"
        buttonInstances["ANTI KILL: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
        if antiKillConnection then
            antiKillConnection:Disconnect()
            antiKillConnection = nil
        end
    end
end)

buttonInstances["CHAMS: OFF"].MouseButton1Click:Connect(function()
    settings.ChamsEnabled = not settings.ChamsEnabled
    
    if settings.ChamsEnabled then
        buttonInstances["CHAMS: OFF"].Text = "CHAMS: ON"
        buttonInstances["CHAMS: OFF"].BackgroundColor3 = Color3.fromRGB(50, 150, 50)
        enableChams()
    else
        buttonInstances["CHAMS: OFF"].Text = "CHAMS: OFF"
        buttonInstances["CHAMS: OFF"].BackgroundColor3 = Color3.fromRGB(120, 60, 0)
        disableChams()
    end
end)

mouse.Move:Connect(function()
    FOVCircle.Position = UDim2.new(0, mouse.X - settings.FOV, 0, mouse.Y - settings.FOV)
end)

player.CharacterAdded:Connect(function(character)
    if settings.Enabled then
        task.wait(2)
        startAimbot()
    end
    if settings.AntiKill then
        task.wait(2)
        startAntiKill()
    end
end)
